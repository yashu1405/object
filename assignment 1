#include<iostream>
using namespace std;
class complex
{
	float realp,imagp;
	
	public:
		complex()
		{
			realp=0.0;
			imagp=0.0;
		}
		complex operator +(complex&);
		complex operator *(complex&);
		complex(float x,float y);
		friend istream &operator>>(istream &,complex &);
		friend ostream &operator<<(ostream &,complex &);
};

complex::complex(float x,float y)
{
	realp=x;
	imagp=y;
}
istream &operator>>(istream &din,complex &c)
{
	cout<<"enter the real part of complex no 2";
	din>>c.realp;
	cout<<"enter the imag part of complex no 2";
	din>>c.imagp;
	return din;
}
ostream &operator<<(ostream &dout,complex &c)
{
	cout<<c.realp<<"+"<<c.imagp<<"i";
	dout<<endl;
	return dout;
}
complex complex::operator +(complex &c)
{
	complex temp;
	temp.realp=realp+c.realp;
	temp.imagp=imagp+c.imagp;
	return temp;
}
complex complex::operator *(complex &c)
{
	complex mul;
	mul.realp=(realp*c.realp)-(imagp*c.imagp);
	mul.imagp=(imagp*c.realp)+(realp*c.imagp);
	return mul;
} 

int main()
{
	complex c2,c3;
	complex c1(1.2,1.3);
	cout<<"complex no 1 is"<<c1;
	cout<<"enter the complex no 2";
	cin>>c2;
	cout<<"complex no 2 is"<<c2;
	cout<<"addition of two complex numbers is\n:" ;
	c3=c2+c1;
	cout<<c3;
	cout<<"multiplication of two complex numbers is\n:";
	c3=c1*c2;
	cout<<c3;
	return 0;
}
